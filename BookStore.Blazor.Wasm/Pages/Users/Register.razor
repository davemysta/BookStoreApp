@page "/users/register"
@inject IClient _httpClient
@inject NavigationManager _navManager
@inject ILogger<Register> _logger

<h3>Register New Account</h3>

@if (string.IsNullOrEmpty(message) == false)
{
    <div class="alert alert-danger">
        <p>@message</p>
    </div>    
}

<div class="card-body">
    <EditForm Model="RegistrationModel" OnValidSubmit="HandleRegistration" FormName="RegisterForm">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label>Email Address
                <InputText class="form-control" @bind-Value="RegistrationModel.Email" />
                <ValidationMessage For="@(() => RegistrationModel.Email)" />
            </label>
        </div>
        <br />
        <div class="form-group">
            <label>
                Username
                <InputText class="form-control" @bind-Value="RegistrationModel.UserName" />
                <ValidationMessage For="@(() => RegistrationModel.UserName)" />
            </label>
        </div>
        <br />
        <div class="form-group">
            <label>First Name
                <InputText class="form-control" @bind-Value="RegistrationModel.FirstName" />
                <ValidationMessage For="@(() => RegistrationModel.FirstName)" />
            </label>
        </div>
        <br />
        <div class="form-group">
            <label>Last Name
                <InputText class="form-control" @bind-Value="RegistrationModel.LastName" />
                <ValidationMessage For="@(() => RegistrationModel.LastName)" />
            </label>
        </div>
        <br />
        <div class="form-group">
            <label>Password
                <InputText type="password" class="form-control" @bind-Value="RegistrationModel.Password" />
                <ValidationMessage For="@(() => RegistrationModel.Password)" />
            </label>
        </div>
        <br />
        <button type="submit" class="btn btn-primary btn-block">Register</button>
    </EditForm>
</div>

@code {
    UserDTO RegistrationModel = new UserDTO();
    string message = string.Empty;

    private async Task HandleRegistration()
    {
        try
        {
            _logger.LogInformation("RegistrationModel", RegistrationModel);
            await _httpClient.RegisterAsync(RegistrationModel);
            NavigateToLogin();
        }
        catch (ApiException ex)
        {
            if (ex.StatusCode >= 200 && ex.StatusCode <= 299)
            {
                NavigateToLogin();
            }

            message = ex.Response;
        }
    }

    private void NavigateToLogin()
    {
        _navManager.NavigateTo("/users/login");
    }
}
